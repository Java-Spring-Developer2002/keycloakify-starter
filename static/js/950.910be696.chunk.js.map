{"version":3,"file":"static/js/950.910be696.chunk.js","mappings":"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","sources":["keycloak-theme/account/pages/Password.tsx","../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/tsafe/src/typeGuard.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LogoutConfirm(props: PageProps<Extract<KcContext, { pageId: \"password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        \"classes\": {\n            ...classes,\n            \"kcBodyClass\": clsx(classes?.kcBodyClass, \"password\")\n        }\n    });\n\n    const { url, password, account, stateChecker } = kcContext;\n\n    const { msg } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"password\">\n            <div className=\"row\">\n                <div className=\"col-md-10\">\n                    <h2>{msg(\"changePasswordHtmlTitle\")}</h2>\n                </div>\n                <div className=\"col-md-2 subtitle\">\n                    <span className=\"subtitle\">${msg(\"allFieldsRequired\")}</span>\n                </div>\n            </div>\n\n            <form action={url.passwordUrl} className=\"form-horizontal\" method=\"post\">\n                <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={account.username ?? \"\"}\n                    autoComplete=\"username\"\n                    readOnly\n                    style={{ \"display\": \"none;\" }}\n                />\n\n                {password.passwordSet && (\n                    <div className=\"form-group\">\n                        <div className=\"col-sm-2 col-md-2\">\n                            <label htmlFor=\"password\" className=\"control-label\">\n                                {msg(\"password\")}\n                            </label>\n                        </div>\n\n                        <div className=\"col-sm-10 col-md-10\">\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" autoFocus autoComplete=\"current-password\" />\n                        </div>\n                    </div>\n                )}\n\n                <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n\n                <div className=\"form-group\">\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"password-new\" className=\"control-label\">\n                            {msg(\"passwordNew\")}\n                        </label>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"password\" className=\"form-control\" id=\"password-new\" name=\"password-new\" autoComplete=\"new-password\" />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"password-confirm\" className=\"control-label two-lines\">\n                            {msg(\"passwordConfirm\")}\n                        </label>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"password\" className=\"form-control\" id=\"password-confirm\" name=\"password-confirm\" autoComplete=\"new-password\" />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div id=\"kc-form-buttons\" className=\"col-md-offset-2 col-md-10 submit\">\n                        <div>\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                name=\"submitAction\"\n                                value=\"Save\"\n                            >\n                                {msg(\"doSave\")}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["LogoutConfirm","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","clsx","kcBodyClass","url","password","account","stateChecker","msg","active","className","action","passwordUrl","method","type","id","name","value","username","autoComplete","readOnly","style","passwordSet","htmlFor","autoFocus","createUseClassName","undefined","params","defaultClasses","useConstCallback","classKey","typeGuard","_value","isMatched","len","length","i","cls","arg","toAdd","Array","isArray","k","assert","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}