{"version":3,"file":"static/js/5872.aefdd047.chunk.js","mappings":"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","sources":["keycloak-theme/Template.tsx","keycloak-theme/KcApp.tsx","keycloak-theme/i18n.ts"],"sourcesContent":["// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/lib/components/shared/Template.tsx\r\nimport { useReducer, useEffect } from \"react\";\r\n// You can replace all relative imports by cherry picking files from the keycloakify module.  \r\n// For example, the following import:  \r\n// import { headInsert } from \"./tools/headInsert\";\r\n// becomes:  \r\nimport { headInsert } from \"keycloakify/lib/tools/headInsert\";\r\nimport { assert } from \"keycloakify/lib/tools/assert\";\r\nimport { clsx } from \"keycloakify/lib/tools/clsx\";\r\nimport { pathJoin } from \"keycloakify/bin/tools/pathJoin\";\r\nimport type { TemplateProps } from \"keycloakify/lib/KcProps\";\r\nimport type { KcContext } from \"./kcContext\";\r\nimport type { I18n } from \"./i18n\";\r\n\r\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\r\n    const {\r\n        displayInfo = false,\r\n        displayMessage = true,\r\n        displayRequiredFields = false,\r\n        displayWide = false,\r\n        showAnotherWayIfPresent = true,\r\n        headerNode,\r\n        showUsernameNode = null,\r\n        formNode,\r\n        infoNode = null,\r\n        kcContext,\r\n        i18n,\r\n        doFetchDefaultThemeResources\r\n    } = props;\r\n\r\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\r\n\r\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\r\n\r\n    const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false);\r\n\r\n    useEffect(() => {\r\n        if (!doFetchDefaultThemeResources) {\r\n            setExtraCssLoaded();\r\n            return;\r\n        }\r\n\r\n        let isUnmounted = false;\r\n        const cleanups: (() => void)[] = [];\r\n\r\n        const toArr = (x: string | readonly string[] | undefined) => (typeof x === \"string\" ? x.split(\" \") : x ?? []);\r\n\r\n        Promise.all(\r\n            [\r\n                ...toArr(props.stylesCommon).map(relativePath => pathJoin(url.resourcesCommonPath, relativePath)),\r\n                ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath))\r\n            ]\r\n                .reverse()\r\n                .map(href =>\r\n                    headInsert({\r\n                        \"type\": \"css\",\r\n                        href,\r\n                        \"position\": \"prepend\"\r\n                    })\r\n                )\r\n        ).then(() => {\r\n            if (isUnmounted) {\r\n                return;\r\n            }\r\n\r\n            setExtraCssLoaded();\r\n        });\r\n\r\n        toArr(props.scripts).forEach(relativePath =>\r\n            headInsert({\r\n                \"type\": \"javascript\",\r\n                \"src\": pathJoin(url.resourcesPath, relativePath)\r\n            })\r\n        );\r\n\r\n        if (props.kcHtmlClass !== undefined) {\r\n            const htmlClassList = document.getElementsByTagName(\"html\")[0].classList;\r\n\r\n            const tokens = clsx(props.kcHtmlClass).split(\" \");\r\n\r\n            htmlClassList.add(...tokens);\r\n\r\n            cleanups.push(() => htmlClassList.remove(...tokens));\r\n        }\r\n\r\n        return () => {\r\n            isUnmounted = true;\r\n\r\n            cleanups.forEach(f => f());\r\n        };\r\n    }, [props.kcHtmlClass]);\r\n\r\n    if (!isExtraCssLoaded) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(props.kcLoginClass)}>\r\n            <div id=\"kc-header\" className={clsx(props.kcHeaderClass)}>\r\n                <div id=\"kc-header-wrapper\" className={clsx(props.kcHeaderWrapperClass)}>\r\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\r\n                <header className={clsx(props.kcFormHeaderClass)}>\r\n                    {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\r\n                        <div id=\"kc-locale\">\r\n                            <div id=\"kc-locale-wrapper\" className={clsx(props.kcLocaleWrapperClass)}>\r\n                                <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\r\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                    <a href=\"#\" id=\"kc-current-locale-link\">\r\n                                        {labelBySupportedLanguageTag[currentLanguageTag]}\r\n                                    </a>\r\n                                    <ul>\r\n                                        {locale.supported.map(({ languageTag }) => (\r\n                                            <li key={languageTag} className=\"kc-dropdown-item\">\r\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                                <a href=\"#\" onClick={() => changeLocale(languageTag)}>\r\n                                                    {labelBySupportedLanguageTag[languageTag]}\r\n                                                </a>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\r\n                        displayRequiredFields ? (\r\n                            <div className={clsx(props.kcContentWrapperClass)}>\r\n                                <div className={clsx(props.kcLabelWrapperClass, \"subtitle\")}>\r\n                                    <span className=\"subtitle\">\r\n                                        <span className=\"required\">*</span>\r\n                                        {msg(\"requiredFields\")}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"col-md-10\">\r\n                                    <h1 id=\"kc-page-title\">{headerNode}</h1>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <h1 id=\"kc-page-title\">{headerNode}</h1>\r\n                        )\r\n                    ) : displayRequiredFields ? (\r\n                        <div className={clsx(props.kcContentWrapperClass)}>\r\n                            <div className={clsx(props.kcLabelWrapperClass, \"subtitle\")}>\r\n                                <span className=\"subtitle\">\r\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-md-10\">\r\n                                {showUsernameNode}\r\n                                <div className={clsx(props.kcFormGroupClass)}>\r\n                                    <div id=\"kc-username\">\r\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\r\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\r\n                                            <div className=\"kc-login-tooltip\">\r\n                                                <i className={clsx(props.kcResetFlowIcon)}></i>\r\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            {showUsernameNode}\r\n                            <div className={clsx(props.kcFormGroupClass)}>\r\n                                <div id=\"kc-username\">\r\n                                    <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\r\n                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\r\n                                        <div className=\"kc-login-tooltip\">\r\n                                            <i className={clsx(props.kcResetFlowIcon)}></i>\r\n                                            <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"kc-content\">\r\n                    <div id=\"kc-content-wrapper\">\r\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\r\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\r\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\r\n                                {message.type === \"success\" && <span className={clsx(props.kcFeedbackSuccessIcon)}></span>}\r\n                                {message.type === \"warning\" && <span className={clsx(props.kcFeedbackWarningIcon)}></span>}\r\n                                {message.type === \"error\" && <span className={clsx(props.kcFeedbackErrorIcon)}></span>}\r\n                                {message.type === \"info\" && <span className={clsx(props.kcFeedbackInfoIcon)}></span>}\r\n                                <span\r\n                                    className=\"kc-feedback-text\"\r\n                                    dangerouslySetInnerHTML={{\r\n                                        \"__html\": message.summary\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        {formNode}\r\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\r\n                            <form\r\n                                id=\"kc-select-try-another-way-form\"\r\n                                action={url.loginAction}\r\n                                method=\"post\"\r\n                                className={clsx(displayWide && props.kcContentWrapperClass)}\r\n                            >\r\n                                <div className={clsx(displayWide && [props.kcFormSocialAccountContentClass, props.kcFormSocialAccountClass])}>\r\n                                    <div className={clsx(props.kcFormGroupClass)}>\r\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\r\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                        <a href=\"#\" id=\"try-another-way\" onClick={() => {\r\n                                            document.forms[\"kc-select-try-another-way-form\" as never].submit();\r\n                                            return false;\r\n                                        }}>\r\n                                            {msg(\"doTryAnotherWay\")}\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                        {displayInfo && (\r\n                            <div id=\"kc-info\" className={clsx(props.kcSignUpClass)}>\r\n                                <div id=\"kc-info-wrapper\" className={clsx(props.kcInfoAreaWrapperClass)}>\r\n                                    {infoNode}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./KcApp.css\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport type { KcContext } from \"./kcContext\";\r\nimport { useI18n } from \"./i18n\";\r\nimport Fallback, { defaultKcProps, type KcProps, type PageProps } from \"keycloakify\";\r\nimport Template from \"./Template\";\r\nimport DefaultTemplate from \"keycloakify/lib/Template\";\r\n\r\nconst Login = lazy(()=> import(\"./pages/Login\"));\r\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\r\nconst Register = lazy(() => import(\"./pages/Register\"));\r\nconst Terms = lazy(() => import(\"./pages/Terms\"));\r\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\r\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\r\nconst Info = lazy(()=> import(\"keycloakify/lib/pages/Info\"));\r\n\r\n// This is like editing the theme.properties \r\n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\r\nconst kcProps: KcProps = {\r\n    ...defaultKcProps,\r\n    // NOTE: The classes are defined in ./KcApp.css\r\n    // You can add your classes alongside thoses that are present in the default Keycloak theme...\r\n    \"kcHtmlClass\": [...defaultKcProps.kcHtmlClass, \"my-root-class\"],\r\n    // ...or overwrite  \r\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\r\n};\r\n\r\nexport default function App(props: { kcContext: KcContext; }) {\r\n\r\n    const { kcContext } = props;\r\n\r\n    const i18n = useI18n({ kcContext });\r\n\r\n    //NOTE: Locales not yet downloaded\r\n    if (i18n === null) {\r\n        return null;\r\n    }\r\n\r\n    const pageProps: Omit<PageProps<any, typeof i18n>, \"kcContext\"> = {\r\n        i18n,\r\n        // Here we have overloaded the default template, however you could use the default one with:  \r\n        //Template: DefaultTemplate,\r\n        Template,\r\n        // Wether or not we should download the CSS and JS resources that comes with the default Keycloak theme.  \r\n        doFetchDefaultThemeResources: true,\r\n        ...kcProps,\r\n    };\r\n\r\n    return (\r\n        <Suspense>\r\n            {(() => {\r\n                switch (kcContext.pageId) {\r\n                    case \"login.ftl\": return <Login {...{ kcContext, ...pageProps }} />;\r\n                    case \"register.ftl\": return <Register {...{ kcContext, ...pageProps }} />;\r\n                    case \"terms.ftl\": return <Terms {...{ kcContext, ...pageProps }} />;\r\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, ...pageProps }} />;\r\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, ...pageProps }} />;\r\n                    // We choose to use the default Template for the Info page and to download the theme resources.\r\n                    case \"info.ftl\": return <Info {...{ kcContext, ...pageProps}} Template={DefaultTemplate} doFetchDefaultThemeResources={true} />;\r\n                    default: return <Fallback {...{ kcContext, ...pageProps }} />;\r\n                }\r\n            })()}\r\n        </Suspense>\r\n    );\r\n\r\n}\r\n","import { useI18n as useI18nBase } from \"keycloakify\";\r\n\r\ntype Props = Omit<Parameters<typeof useI18nBase>[0], \"extraMessages\">;\r\n\r\nexport function useI18n(props: Props) {\r\n    const { kcContext } = props;\r\n    return useI18nBase({\r\n        kcContext,\r\n        \"extraMessages\": {\r\n            \"en\": {\r\n                \"alphanumericalCharsOnly\": \"Only alphanumerical characters\",\r\n                \"gender\": \"Gender\",\r\n                // Here we overwrite the default english value for the message \"doForgotPassword\" \r\n                // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\r\n                \"doForgotPassword\": \"I forgot my password\",\r\n            },\r\n            \"fr\": {\r\n                /* spell-checker: disable */\r\n                \"alphanumericalCharsOnly\": \"Caractère alphanumérique uniquement\",\r\n                \"gender\": \"Genre\",\r\n                \"doForgotPassword\": \"J'ai oublié mon mot de passe\"\r\n                /* spell-checker: enable */\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\r\n"],"names":["Template","props","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","formNode","infoNode","kcContext","i18n","doFetchDefaultThemeResources","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","map","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","href","headInsert","then","scripts","forEach","undefined","kcHtmlClass","htmlClassList","document","getElementsByTagName","classList","tokens","clsx","add","push","remove","f","className","kcLoginClass","id","kcHeaderClass","kcHeaderWrapperClass","displayNameHtml","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","length","kcLocaleWrapperClass","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","kcLabelWrapperClass","kcFormGroupClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","type","kcFeedbackSuccessIcon","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","kcFormSocialAccountContentClass","kcFormSocialAccountClass","name","value","forms","submit","kcSignUpClass","kcInfoAreaWrapperClass","Login","lazy","Register","Terms","MyExtraPage1","MyExtraPage2","Info","kcProps","defaultKcProps","App","useI18nBase","useI18n","pageProps","Suspense","pageId","DefaultTemplate"],"sourceRoot":""}