{"version":3,"file":"static/js/1793.94ec1013.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/account/Template.tsx","../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/usePrepareTemplate.ts","../node_modules/keycloakify/src/tools/HTMLElement.prototype.prepend.ts","../node_modules/tsafe/src/typeGuard.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/keycloakify/src/tools/headInsert.ts"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/account/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\nimport { assert } from \"keycloakify/tools/assert\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, active, classes, children } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { locale, url, features, realm, message, referrer } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        url,\n        \"stylesCommon\": [\"node_modules/patternfly/dist/css/patternfly.min.css\", \"node_modules/patternfly/dist/css/patternfly-additions.min.css\"],\n        \"styles\": [\"css/account.css\"],\n        \"htmlClassName\": undefined,\n        \"bodyClassName\": clsx(\"admin-console\", \"user\", getClassName(\"kcBodyClass\"))\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <>\n            <header className=\"navbar navbar-default navbar-pf navbar-main header\">\n                <nav className=\"navbar\" role=\"navigation\">\n                    <div className=\"navbar-header\">\n                        <div className=\"container\">\n                            <h1 className=\"navbar-title\">Keycloak</h1>\n                        </div>\n                    </div>\n                    <div className=\"navbar-collapse navbar-collapse-1\">\n                        <div className=\"container\">\n                            <ul className=\"nav navbar-nav navbar-utility\">\n                                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                                    <li>\n                                        <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                            <a href=\"#\" id=\"kc-current-locale-link\">\n                                                {labelBySupportedLanguageTag[currentLanguageTag]}\n                                            </a>\n                                            <ul>\n                                                {locale.supported.map(({ languageTag }) => (\n                                                    <li key={languageTag} className=\"kc-dropdown-item\">\n                                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                        <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                                                            {labelBySupportedLanguageTag[languageTag]}\n                                                        </a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    </li>\n                                )}\n                                {referrer?.url !== undefined && (\n                                    <li>\n                                        <a href={referrer.url} id=\"referrer\">\n                                            {msg(\"backTo\", referrer.name)}\n                                        </a>\n                                    </li>\n                                )}\n                                <li>\n                                    <a href={url.getLogoutUrl()}>{msg(\"doSignOut\")}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n\n            <div className=\"container\">\n                <div className=\"bs-sidebar col-sm-3\">\n                    <ul>\n                        <li className={clsx(active === \"account\" && \"active\")}>\n                            <a href={url.accountUrl}>{msg(\"account\")}</a>\n                        </li>\n                        {features.passwordUpdateSupported && (\n                            <li className={clsx(active === \"password\" && \"active\")}>\n                                <a href={url.passwordUrl}>{msg(\"password\")}</a>\n                            </li>\n                        )}\n                        <li className={clsx(active === \"totp\" && \"active\")}>\n                            <a href={url.totpUrl}>{msg(\"authenticator\")}</a>\n                        </li>\n                        {features.identityFederation && (\n                            <li className={clsx(active === \"social\" && \"active\")}>\n                                <a href={url.socialUrl}>{msg(\"federatedIdentity\")}</a>\n                            </li>\n                        )}\n                        <li className={clsx(active === \"sessions\" && \"active\")}>\n                            <a href={url.sessionsUrl}>{msg(\"sessions\")}</a>\n                        </li>\n                        <li className={clsx(active === \"applications\" && \"active\")}>\n                            <a href={url.applicationsUrl}>{msg(\"applications\")}</a>\n                        </li>\n                        {features.log && (\n                            <li className={clsx(active === \"log\" && \"active\")}>\n                                <a href={url.logUrl}>{msg(\"log\")}</a>\n                            </li>\n                        )}\n                        {realm.userManagedAccessAllowed && features.authorization && (\n                            <li className={clsx(active === \"authorization\" && \"active\")}>\n                                <a href={url.resourceUrl}>{msg(\"myResources\")}</a>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n\n                <div className=\"col-sm-9 content-area\">\n                    {message !== undefined && (\n                        <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                            {message.type === \"success\" && <span className=\"pficon pficon-ok\"></span>}\n                            {message.type === \"error\" && <span className=\"pficon pficon-error-circle-o\"></span>}\n                            <span className=\"kc-feedback-text\">{message.summary}</span>\n                        </div>\n                    )}\n\n                    {children}\n                </div>\n            </div>\n        </>\n    );\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"keycloakify/tools/headInsert\";\nimport { pathJoin } from \"keycloakify/bin/tools/pathJoin\";\nimport { clsx } from \"keycloakify/tools/clsx\";\n\nexport function usePrepareTemplate(params: {\n    doFetchDefaultThemeResources: boolean;\n    stylesCommon?: string[];\n    styles?: string[];\n    scripts?: string[];\n    url: {\n        resourcesCommonPath: string;\n        resourcesPath: string;\n    };\n    htmlClassName: string | undefined;\n    bodyClassName: string | undefined;\n}) {\n    const { doFetchDefaultThemeResources, stylesCommon, styles, url, scripts, htmlClassName, bodyClassName } = params;\n\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n\n        let isUnmounted = false;\n\n        Promise.all(\n            [\n                ...(stylesCommon ?? []).map(relativePath => pathJoin(url.resourcesCommonPath, relativePath)),\n                ...(styles ?? []).map(relativePath => pathJoin(url.resourcesPath, relativePath))\n            ]\n                .reverse()\n                .map(href =>\n                    headInsert({\n                        \"type\": \"css\",\n                        href,\n                        \"position\": \"prepend\"\n                    })\n                )\n        ).then(() => {\n            if (isUnmounted) {\n                return;\n            }\n\n            setReady();\n        });\n\n        (scripts ?? []).forEach(relativePath =>\n            headInsert({\n                \"type\": \"javascript\",\n                \"src\": pathJoin(url.resourcesPath, relativePath)\n            })\n        );\n\n        return () => {\n            isUnmounted = true;\n        };\n    }, []);\n\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n\n    return { isReady };\n}\n\nfunction useSetClassName(params: { target: \"html\" | \"body\"; className: string | undefined }) {\n    const { target, className } = params;\n\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n\n        const tokens = clsx(className).split(\" \");\n\n        htmlClassList.add(...tokens);\n\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n","if (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\n\nexport function headInsert(\n    params:\n        | {\n              type: \"css\";\n              href: string;\n              position: \"append\" | \"prepend\";\n          }\n        | {\n              type: \"javascript\";\n              src: string;\n          }\n) {\n    const htmlElement = document.createElement(\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return \"link\";\n                case \"javascript\":\n                    return \"script\";\n            }\n        })()\n    );\n\n    const dLoaded = new Deferred<void>();\n\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n\n    Object.assign(\n        htmlElement,\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return {\n                        \"href\": params.href,\n                        \"type\": \"text/css\",\n                        \"rel\": \"stylesheet\",\n                        \"media\": \"screen,print\"\n                    };\n                case \"javascript\":\n                    return {\n                        \"src\": params.src,\n                        \"type\": \"text/javascript\"\n                    };\n            }\n        })()\n    );\n\n    document.getElementsByTagName(\"head\")[0][\n        (() => {\n            switch (params.type) {\n                case \"javascript\":\n                    return \"appendChild\";\n                case \"css\":\n                    return (() => {\n                        switch (params.position) {\n                            case \"append\":\n                                return \"appendChild\";\n                            case \"prepend\":\n                                return \"prepend\";\n                        }\n                    })();\n            }\n        })()\n    ](htmlElement);\n\n    return dLoaded.pr;\n}\n"],"names":["Template","props","kcContext","i18n","doUseDefaultCss","active","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","locale","url","features","realm","message","referrer","usePrepareTemplate","undefined","clsx","isReady","_jsxs","_jsx","className","role","internationalizationEnabled","assert","supported","length","id","href","map","languageTag","onClick","name","getLogoutUrl","accountUrl","passwordUpdateSupported","passwordUrl","totpUrl","identityFederation","socialUrl","sessionsUrl","applicationsUrl","log","logUrl","userManagedAccessAllowed","authorization","resourceUrl","type","summary","createUseClassName","params","defaultClasses","useConstCallback","classKey","doFetchDefaultThemeResources","stylesCommon","styles","scripts","htmlClassName","bodyClassName","useReducer","setReady","useEffect","isUnmounted","Promise","all","relativePath","pathJoin","resourcesCommonPath","resourcesPath","reverse","headInsert","then","forEach","useSetClassName","target","htmlClassList","document","getElementsByTagName","classList","tokens","split","add","remove","HTMLElement","prototype","prepend","childNode","Error","this","insertBefore","firstChild","typeGuard","_value","isMatched","len","i","cls","arg","toAdd","Array","isArray","k","htmlElement","createElement","dLoaded","Deferred","addEventListener","resolve","Object","assign","src","position","pr"],"sourceRoot":""}