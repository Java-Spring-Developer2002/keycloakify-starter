{"version":3,"file":"static/js/7725.1cee381d.chunk.js","mappings":"mbAiBe,SAASA,EAAMC,GAC7B,IAAQC,EAA+ED,EAA/EC,UAAWC,EAAoEF,EAApEE,KAAnB,EAAuFF,EAA9DG,6BAAAA,OAAzB,SAA8DC,EAAyBJ,EAAzBI,SAAaC,GAA3E,OAAuFL,EAAvF,GAEQM,EAAgBJ,EAAhBI,IAAKC,EAAWL,EAAXK,QAEbC,EAAAA,EAAAA,kBAAiB,CAChBP,UAAAA,EACA,qBAAuB,WAAvB,8BAAwB,mGAASQ,EAAT,EAASA,mBAAT,SAEMC,MAEtB,OADED,EACWE,EACFC,GAEZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAPI,cAEjBC,EAFiB,yBAShBA,GATgB,2CAAxB,mDAAuB,MAaxBC,EAAAA,EAAAA,IAAyBC,EAAAA,iBAEzB,IAAQC,EAAQlB,EAARkB,IAER,YAA8BC,IAA1BF,EAAAA,gBAAAA,MACI,MAIP,SAACd,GAAD,2BACOH,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCE,IADzD,IAECgB,gBAAgB,EAChBC,WAAYhB,EAAI,cAChBiB,UACC,iCACC,gBAAKC,GAAG,gBAAR,SAAyBN,EAAAA,gBAAAA,QAAyB,SAACO,EAAA,EAAD,UAAWP,EAAAA,gBAAAA,WAC7D,kBAAMQ,UAAU,eAAeC,OAAQR,EAAIS,YAAaC,OAAO,OAA/D,WACC,kBACCH,WAAWI,EAAAA,EAAAA,GACVzB,EAAQ0B,cACR1B,EAAQ0B,cACR1B,EAAQ0B,cACR1B,EAAQ2B,qBACR3B,EAAQ4B,oBAETC,KAAK,SACLV,GAAG,YACHW,KAAK,SACLC,MAAO7B,EAAO,eAEf,kBACCmB,WAAWI,EAAAA,EAAAA,GAAKzB,EAAQ0B,cAAe1B,EAAQgC,qBAAsBhC,EAAQ4B,oBAC7EC,KAAK,SACLV,GAAG,aACHW,KAAK,SACLC,MAAO7B,EAAO,mBAGhB,gBAAKmB,UAAU,kBAKnB,C,mCCzED,cACA,cAASY,OAAAA,eAAAA,EAAAA,KAAAA,CAAAC,YAAAA,EAAAC,IAAAA,WAAA,SAAAvB,wBAAwB,G,guBCRjC,cAGQwB,EADR,WAC2B,UA+B3BC,EAAAA,OAAA,SACIC,EACAC,GAGAH,GACI,WACI,IAAMI,EAAKC,EAAAA,IAAIC,SAIf,OAFAJ,EAAOE,GAEA,WAAOA,EAAIG,MAAS,CAC9B,GACDJ,EAGP,C,giCClDD,cAEQK,EADR,WAC0B,SAc1BP,EAAAA,yBAAA,SAAyCQ,GAG/B,IAAGC,EAAH,EAAeF,GAAS,WAAM,OAAAC,EAAIE,KAAK,IAAC,GAA7B,IAEjB,IAAAC,SACI,SAAAR,GACI,OAAAK,EAAII,OAAOT,GAAK,SAAAO,GAAS,OAAAD,GAAS,WAAM,OAAAC,CAAK,GAAC,GAAC,GACnD,CAACF,GAER,C,uBCzBc,SAASK,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAavB,OAAOwB,KAAKN,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWE,OAAQJ,IACjCD,EAAMG,EAAWF,GACbF,EAASO,QAAQN,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,CACT,CDVe,CAA6BJ,EAAQC,GAGlD,GAAInB,OAAO2B,sBAAuB,CAChC,IAAIC,EAAmB5B,OAAO2B,sBAAsBT,GAEpD,IAAKG,EAAI,EAAGA,EAAIO,EAAiBH,OAAQJ,IACvCD,EAAMQ,EAAiBP,GACnBF,EAASO,QAAQN,IAAQ,GACxBpB,OAAO6B,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C","sources":["keycloak-theme/pages/Terms.tsx","../node_modules/evt/src/hooks/index.ts","../node_modules/evt/src/hooks/useEvt.ts","../node_modules/evt/src/hooks/useRerenderOnStateChange.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/**\r\n * NOTE: Yo do not need to do all this to put your own Terms and conditions\r\n * this is if you want component level customization.  \r\n * If the default works for you you can just use the useDownloadTerms hook \r\n * in the KcApp.tsx\r\n * Example: https://github.com/garronej/keycloakify-starter/blob/a20c21b2aae7c6dc6dbea294f3d321955ddf9355/src/KcApp/KcApp.tsx#L14-L30\r\n */\r\nimport { clsx } from \"keycloakify/lib/tools/clsx\";\r\nimport { useRerenderOnStateChange } from \"evt/hooks\";\r\nimport { Markdown } from \"keycloakify/lib/tools/Markdown\";\r\nimport { evtTermMarkdown, useDownloadTerms } from \"keycloakify/lib/pages/Terms\";\r\nimport tos_en_url from \"../assets/tos_en.md\";\r\nimport tos_fr_url from \"../assets/tos_fr.md\";\r\nimport type { PageProps } from \"keycloakify/lib/KcProps\";\r\nimport type { KcContext } from \"../kcContext\";\r\nimport type { I18n } from \"../i18n\";\r\n\r\nexport default function Terms(props: PageProps<Extract<KcContext, { pageId: \"terms.ftl\"; }>, I18n>) {\r\n\tconst { kcContext, i18n, doFetchDefaultThemeResources = true, Template, ...kcProps } = props;\r\n\r\n\tconst { msg, msgStr } = i18n;\r\n\r\n\tuseDownloadTerms({\r\n\t\tkcContext,\r\n\t\t\"downloadTermMarkdown\": async ({ currentLanguageTag }) => {\r\n\r\n\t\t\tconst markdownString = await fetch((() => {\r\n\t\t\t\tswitch (currentLanguageTag) {\r\n\t\t\t\t\tcase \"fr\": return tos_fr_url;\r\n\t\t\t\t\tdefault: return tos_en_url;\r\n\t\t\t\t}\r\n\t\t\t})()).then(response => response.text());\r\n\r\n\t\t\treturn markdownString;\r\n\t\t},\r\n\t});\r\n\r\n\tuseRerenderOnStateChange(evtTermMarkdown);\r\n\r\n\tconst { url } = kcContext;\r\n\r\n\tif (evtTermMarkdown.state === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Template\r\n\t\t\t{...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\r\n\t\t\tdisplayMessage={false}\r\n\t\t\theaderNode={msg(\"termsTitle\")}\r\n\t\t\tformNode={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div id=\"kc-terms-text\">{evtTermMarkdown.state && <Markdown>{evtTermMarkdown.state}</Markdown>}</div>\r\n\t\t\t\t\t<form className=\"form-actions\" action={url.loginAction} method=\"POST\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\tkcProps.kcButtonClass,\r\n\t\t\t\t\t\t\t\tkcProps.kcButtonClass,\r\n\t\t\t\t\t\t\t\tkcProps.kcButtonClass,\r\n\t\t\t\t\t\t\t\tkcProps.kcButtonPrimaryClass,\r\n\t\t\t\t\t\t\t\tkcProps.kcButtonLargeClass\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tname=\"accept\"\r\n\t\t\t\t\t\t\tid=\"kc-accept\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue={msgStr(\"doAccept\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={clsx(kcProps.kcButtonClass, kcProps.kcButtonDefaultClass, kcProps.kcButtonLargeClass)}\r\n\t\t\t\t\t\t\tname=\"cancel\"\r\n\t\t\t\t\t\t\tid=\"kc-decline\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue={msgStr(\"doDecline\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"clearfix\" />\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n","/*\nNOTE: In theory react should be a peer dependency\ninstead of a dev dependency.\nBut given that /hook is just a plugin for using Evt\nwith react we don't want to require react to be\ninstalled to install Evt.\n*/\nexport { useEvt } from \"./useEvt\";\nexport { useRerenderOnStateChange } from \"./useRerenderOnStateChange\";","import { Evt } from \"../lib\";\nimport type { Ctx } from \"../lib\";\nimport * as React from \"react\";\nconst { useEffect } = React;\n\n\n/**\n * https://docs.evt.land/api/react-hooks\n * \n * Provide a Ctx to attach handlers.\n * You should list in deps all the Evt that are\n * susceptible to change ( Evt passed as props \n * or Evt that are react states ) that you use in the\n * factoryOrEffect callback. \n * As for useEffect you should also list every other\n * value that you use.\n * Whenever any value in deps is changed factoryOrEffect\n * is invoked again with the new Evt and the previous handler\n * get detached.\n * All handler are also detached when the component unmount.\n * \n * factoryOrEffect can be used for attaching handler to event\n * or to generate a new event that is a merge/pipe of other \n * Evts.\n * \n * BE AWARE: Unlike useEffect factoryOrEffect is called \n * on render ( like useMemo's callback ).\n * Remember that you shouldn't update state in a component \n * render tick (in the useMemo for example). If you you need to \n * perform an effect on first render (attaching a stateful evt\n * for example) use registerSideEffect(()=>{ ... })\n * \n * Demo: https://docs.evt.land/react-hooks#useevt\n */\nexport function useEvt(\n    effect: (ctx: Ctx) => void,\n    deps?: React.DependencyList\n): void {\n\n    useEffect(\n        ()=> {\n            const ctx= Evt.newCtx();\n\n            effect(ctx);\n\n            return ()=> { ctx.done(); };\n        },\n        deps\n    );\n\n}\n","import { useEvt } from \"./useEvt\";\nimport * as React from \"react\";\nconst { useState } = React;\n\ntype CtxLike<Result = any> = import(\"../lib/types/interfaces/CtxLike\").CtxLike<Result>;\n\ninterface StatefulReadonlyEvtLike {\n    state: unknown;\n    attach: (ctx: CtxLike, cb: (state: unknown)=> void)=> void;\n};\n\n/**\n * https://docs.evt.land/react-hooks#usererenderonstatechange\n * \n * To use StatefulEvt as react component state.\n * */\nexport function useRerenderOnStateChange(evt: StatefulReadonlyEvtLike): void {\n\n    //NOTE: We use function in case the state is a function\n    const [, setState] = useState(() => evt.state);\n\n    useEvt(\n        ctx =>\n            evt.attach(ctx, state => setState(() => state)),\n        [evt]\n    );\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Terms","props","kcContext","i18n","doFetchDefaultThemeResources","Template","kcProps","msg","msgStr","useDownloadTerms","currentLanguageTag","fetch","tos_fr_url","tos_en_url","then","response","text","markdownString","useRerenderOnStateChange","evtTermMarkdown","url","undefined","displayMessage","headerNode","formNode","id","Markdown","className","action","loginAction","method","clsx","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","name","type","value","kcButtonDefaultClass","Object","enumerable","get","useEffect","exports","effect","deps","ctx","lib_1","newCtx","done","useState","evt","setState","state","useEvt","attach","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}